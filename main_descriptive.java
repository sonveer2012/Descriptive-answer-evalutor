
import java.io.BufferedReader;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class main_descriptive extends javax.swing.JFrame {

    /**
     * Creates new form main_descriptive
     */
    public main_descriptive() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        feed_model = new javax.swing.JButton();
        l1 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        t2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        feed_model.setText("FEED MODEL ANSWER ");
        feed_model.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feed_modelActionPerformed(evt);
            }
        });

        l1.setText("PATH ");

        l3.setText("DOCUMENT NAME");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addComponent(t1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(l3)
                        .addGap(81, 81, 81)
                        .addComponent(t2)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(feed_model)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(feed_model)
                .addGap(9, 9, 9)
                .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 static  String stop_words[]={"a","about","above","after","again",
"against","all","am","an","and","any","are","aren't","as","at","be","because","been","before","being","below","between","both","but","by","can't","cannot","could","couldn't",
"did","didn't","do","does","doesn't","doing","don't","down","during","each","few","for","from","further","had","hadn't","has","hasn't","have","haven't","having","he","he'd","he'll","he's","her","here",
"here's","hers","herself","him","himself","his","how","how's","i","i'd","i'll","i'm","i've","if","in","into","is","isn't","it","it's","its","itself","let's","me","more","most","mustn't","my","myself","no","nor","not","of",
"off","on","once","only","or","other","ought","our","ours", "ourselves","out","over","own","same","shan't","she","she'd","she'll","she's","should","shouldn't","so","some","such","than","that","that's","the","their","theirs",
"them","themselves","then","there","there's","these","they","they'd","they'll","they're","they've","this","those","through","to","too","under","until","up","very","was","wasn't","we","we'd","we'll","we're","we've","were",
"weren't","what","what's","when","when's","where","where's","which","while","who","who's","whom","why","why's","with","won't","would","wouldn't","you","you'd","you'll","you're","you've","your","yours","yourself","yourselves"};
 
   int arr_len=174;
    static String[] question_words =new String[100];
    static int ques_arr_length;
 
 public static void read_model_answer(String path,String doc_name){
     
     
     String str="",str1="",type_paper="model",str2="",sen_type=" ";
     String path_name=path+"/"+doc_name;
      path_name.replaceAll("/", "//");
      int len=0;
    int i,j,k,ctr=0;
    try{
      FileReader fr=new FileReader(path_name);
      BufferedReader br =new BufferedReader(fr);
     while((str=br.readLine())!=null){
         
         i=0;
       //  System.out.println(str);
         str2=str.substring(0,1);
         System.out.println(str2);
         if(str2.equals("Q")){
             
            // ctr=Integer.parseInt(str.substring(1,2));
             str=str.substring(str.indexOf('.')+1);
            
             System.out.println(str);
             sen_type="ques";
              
         }
         else{  
         ctr=Integer.parseInt(str.substring(0,str.indexOf('.')));
         str=str.substring(2);
         sen_type="ans";
         }
         
         len=str.length();
         while(len!=0){
         j= str.indexOf('.');
        // if(j<0)
          //   j=str.indexOf('?');
         str1=str.substring(0,j);
         //System.out.println("shanu jhxjnd");
         if(sen_type.equals("ans"))
         extract_keywords(str1,ctr,doc_name);
         else
            extract_keywords_ques(str1);
         System.out.println("jckfvcf");
          str=str.substring(j+1);
          System.out.println(str);
          System.out.println("xbnabxnacnmscdnc");
        // System.out.println(str1);
          
          len=str.length();
         }
      }
      
  }
    catch(Exception e){
        
        System.out.println(e+"yaha par kya");
        System.out.println(e.getMessage());
    }
    
  }
 
   public static void extract_keywords(String str, int ctr,String file_name){
     String str1="";
     int len=str.length(),i=0,j,k;
     String doc_name=file_name.substring(0,file_name.indexOf('.'));
    System.out.println("kya pata"+ques_arr_length);
     while(len!=0){
         j=str.indexOf(' ');
         if(j<0){
              if(search_stop_words(str)==0){
                  
                  for(k=0;k<ques_arr_length;k++){
                      if(str.equals(question_words[k]))
                          break;
                  }
                  if(k>=ques_arr_length)
               insert_into_table(ctr,str,doc_name);
               
              }
                
                  
              break;
         }
   
         str1=str.substring(0,j);
         str1.trim();
         str=str.substring(j+1);
       
         len=str.length();
        if(search_stop_words(str1)==0){
            for(k=0;k<ques_arr_length;k++){
                      if(str1.equals(question_words[k]))
                          break;
                  }
            if(k>=ques_arr_length)
            insert_into_table(ctr,str1,doc_name);
        }
             
     }
     
     
 }   
 
 public static void extract_keywords_ques(String str){
     String str1="";
     System.out.println(str + "cbdbdf");
     int len=str.length(),j,ctr=0;
     while(len!=0){
         
          j=str.indexOf(' ');
          if(j<0){
              if(search_stop_words(str)==0){
                  question_words[ctr]=str;
              ctr++;
          }
              break;
          }
          
         str1=str.substring(0,j);
         str1=str1.trim();
         str=str.substring(j+1);
       //  System.out.println(str);
         len=str.length();
       //  System.out.println("iociecd");
         
         if(search_stop_words(str1)==0){
             //System.out.println("!:slkdj  "+ ctr);
             question_words[ctr]=str1;
         //System.out.println("!:slkdj  "+ ctr);
             ctr++;
     }
         }
      //System.out.println("xjnkajn");
         ques_arr_length=ctr;
         System.out.println(""+ctr);
    
     
 }
 
 
  public static void insert_into_table(int q_no, String key_word,String doc_name){
     String query;
     
     try
        {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/descriptive_answer","root","shanu");
            Statement stmt=con.createStatement();
            Statement stmt1=con.createStatement();
           
            
            String query1="select word_replacement from word_list where word='"+key_word+"';";
             ResultSet rs=stmt1.executeQuery(query1);
             
             while(rs.next()){
              key_word=rs.getString("word_replacement");
             }
            
            query="insert into "+doc_name+" values("+q_no+",'"+key_word+"',0);";
            stmt.execute(query);
           
    }
         catch(Exception e){
             System.out.println(""+e);
            
         }
 }
 
    public static int search_stop_words(String word){
        
        int i=0,j=173,mid;
        mid=(i+j)/2;
        String str1="",str2="";
        str2=word.toUpperCase();
        while(i<=j){
            str1=stop_words[mid].toUpperCase();
            if(str1.equals(str2))
                return 1;
            else
                if(str1.compareTo(str2)>0)
                    j=mid-1;
             else
                    i=mid+1;
            mid=(i+j)/2;
            }
       // if(str1.equals(str2))
         //       return 1;
        
        return 0;
    }
 
    
     public static  void create_table(String doc_name){
      String query="";
      
       int ctr=0,exist_table=0,len=doc_name.length(),i;
       i=doc_name.indexOf('.');
       doc_name=doc_name.substring(0,i);
      
       try
        {
            
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/descriptive_answer","root","shanu");
            Statement stmt=con.createStatement();
           // String query="Select 1 from "+doc_name+" LIMIT 1;";
            
            
            
            String query1="Select * from table_count;";
            ResultSet rs=stmt.executeQuery(query1);
            
            while(rs.next()){
                ctr=rs.getInt("count");
            }
            ctr++;
            String table_name=doc_name;
            query="create table "+table_name+"(ques_no int, key_words varchar(30), match_key int);";
            stmt.execute(query);
             query1="update table_count set count="+ctr+";";
             stmt.executeUpdate(query1);
           
    }
         catch(Exception e){
             System.out.println(""+e);
              
            System.exit(0);
         }
   }
 
    private void feed_modelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feed_modelActionPerformed
      String path=t1.getText();
      String doc_name=t2.getText();
      System.out.println(path);
      
        System.out.println(doc_name);
       create_table(doc_name);
    read_model_answer(path,doc_name); 
    l2.setText("Model Answer paper fed successfully!!");// TODO add your handling code here:
    }//GEN-LAST:event_feed_modelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_descriptive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_descriptive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_descriptive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_descriptive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_descriptive().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton feed_model;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    // End of variables declaration//GEN-END:variables
}
